// Mocks generated by Mockito 5.4.5 from annotations
// in concordia_nav/test/poi/poipage_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i10;

import 'package:concordia_nav/data/domain-model/place.dart' as _i7;
import 'package:concordia_nav/data/domain-model/poi.dart' as _i5;
import 'package:concordia_nav/data/services/places_service.dart' as _i6;
import 'package:concordia_nav/utils/poi/poi_map_viewmodel.dart' as _i11;
import 'package:concordia_nav/utils/poi/poi_viewmodel.dart' as _i3;
import 'package:flutter/material.dart' as _i2;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIconData_0 extends _i1.SmartFake implements _i2.IconData {
  _FakeIconData_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [POIViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPOIViewModel extends _i1.Mock implements _i3.POIViewModel {
  MockPOIViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get globalSearchQuery =>
      (super.noSuchMethod(
            Invocation.getter(#globalSearchQuery),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#globalSearchQuery),
            ),
          )
          as String);

  @override
  bool get isLoadingLocation =>
      (super.noSuchMethod(
            Invocation.getter(#isLoadingLocation),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasLocationPermission =>
      (super.noSuchMethod(
            Invocation.getter(#hasLocationPermission),
            returnValue: false,
          )
          as bool);

  @override
  String get locationErrorMessage =>
      (super.noSuchMethod(
            Invocation.getter(#locationErrorMessage),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#locationErrorMessage),
            ),
          )
          as String);

  @override
  List<_i5.POI> get allPOIs =>
      (super.noSuchMethod(Invocation.getter(#allPOIs), returnValue: <_i5.POI>[])
          as List<_i5.POI>);

  @override
  bool get isLoadingIndoor =>
      (super.noSuchMethod(
            Invocation.getter(#isLoadingIndoor),
            returnValue: false,
          )
          as bool);

  @override
  String get errorIndoor =>
      (super.noSuchMethod(
            Invocation.getter(#errorIndoor),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#errorIndoor),
            ),
          )
          as String);

  @override
  _i6.TravelMode get travelMode =>
      (super.noSuchMethod(
            Invocation.getter(#travelMode),
            returnValue: _i6.TravelMode.DRIVE,
          )
          as _i6.TravelMode);

  @override
  List<_i7.Place> get outdoorPOIs =>
      (super.noSuchMethod(
            Invocation.getter(#outdoorPOIs),
            returnValue: <_i7.Place>[],
          )
          as List<_i7.Place>);

  @override
  List<_i7.Place> get filteredOutdoorPOIs =>
      (super.noSuchMethod(
            Invocation.getter(#filteredOutdoorPOIs),
            returnValue: <_i7.Place>[],
          )
          as List<_i7.Place>);

  @override
  bool get isLoadingOutdoor =>
      (super.noSuchMethod(
            Invocation.getter(#isLoadingOutdoor),
            returnValue: false,
          )
          as bool);

  @override
  String get errorOutdoor =>
      (super.noSuchMethod(
            Invocation.getter(#errorOutdoor),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#errorOutdoor),
            ),
          )
          as String);

  @override
  double get searchRadius =>
      (super.noSuchMethod(Invocation.getter(#searchRadius), returnValue: 0.0)
          as double);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> loadIndoorPOIs() =>
      (super.noSuchMethod(
            Invocation.method(#loadIndoorPOIs, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setGlobalSearchQuery(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#setGlobalSearchQuery, [query]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  List<_i5.POI> filterPOIsWithGlobalSearch() =>
      (super.noSuchMethod(
            Invocation.method(#filterPOIsWithGlobalSearch, []),
            returnValue: <_i5.POI>[],
          )
          as List<_i5.POI>);

  @override
  List<String> getUniqueFilteredPOINames(List<_i5.POI>? pois) =>
      (super.noSuchMethod(
            Invocation.method(#getUniqueFilteredPOINames, [pois]),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i2.IconData getIconForPOICategory(_i5.POICategory? category) =>
      (super.noSuchMethod(
            Invocation.method(#getIconForPOICategory, [category]),
            returnValue: _FakeIconData_0(
              this,
              Invocation.method(#getIconForPOICategory, [category]),
            ),
          )
          as _i2.IconData);

  @override
  double calculateDistance(_i9.LatLng? point1, _i9.LatLng? point2) =>
      (super.noSuchMethod(
            Invocation.method(#calculateDistance, [point1, point2]),
            returnValue: 0.0,
          )
          as double);

  @override
  void updatePlaceWithDistance(int? index, _i7.Place? updatedPlace) =>
      super.noSuchMethod(
        Invocation.method(#updatePlaceWithDistance, [index, updatedPlace]),
        returnValueForMissingStub: null,
      );

  @override
  bool hasMatchingIndoorPOIs() =>
      (super.noSuchMethod(
            Invocation.method(#hasMatchingIndoorPOIs, []),
            returnValue: false,
          )
          as bool);

  @override
  List<Map<String, dynamic>> getOutdoorCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getOutdoorCategories, []),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  void navigateToNearbyPOIMap(
    _i2.BuildContext? context,
    _i7.PlaceType? category,
  ) => super.noSuchMethod(
    Invocation.method(#navigateToNearbyPOIMap, [context, category]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<void> setTravelMode(_i6.TravelMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#setTravelMode, [mode]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setSearchRadius(double? radius) =>
      (super.noSuchMethod(
            Invocation.method(#setSearchRadius, [radius]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> applyRadiusChange() =>
      (super.noSuchMethod(
            Invocation.method(#applyRadiusChange, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> loadOutdoorPOIs(_i7.PlaceType? category) =>
      (super.noSuchMethod(
            Invocation.method(#loadOutdoorPOIs, [category]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> searchOutdoorPOIs(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchOutdoorPOIs, [query]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<Set<_i9.Marker>> createMarkersForOutdoorPOIs(
    dynamic Function(_i7.Place)? onTapCallback,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createMarkersForOutdoorPOIs, [onTapCallback]),
            returnValue: _i8.Future<Set<_i9.Marker>>.value(<_i9.Marker>{}),
          )
          as _i8.Future<Set<_i9.Marker>>);

  @override
  _i8.Future<void> refreshLocation() =>
      (super.noSuchMethod(
            Invocation.method(#refreshLocation, []),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setOutdoorCategory(
    _i7.PlaceType? category,
    bool? selected,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#setOutdoorCategory, [category, selected]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  bool hasMatchingCategories() =>
      (super.noSuchMethod(
            Invocation.method(#hasMatchingCategories, []),
            returnValue: false,
          )
          as bool);

  @override
  _i2.IconData getIconForPlaceType(_i7.PlaceType? type) =>
      (super.noSuchMethod(
            Invocation.method(#getIconForPlaceType, [type]),
            returnValue: _FakeIconData_0(
              this,
              Invocation.method(#getIconForPlaceType, [type]),
            ),
          )
          as _i2.IconData);

  @override
  _i2.IconData getIconForTravelMode(_i6.TravelMode? mode) =>
      (super.noSuchMethod(
            Invocation.method(#getIconForTravelMode, [mode]),
            returnValue: _FakeIconData_0(
              this,
              Invocation.method(#getIconForTravelMode, [mode]),
            ),
          )
          as _i2.IconData);

  @override
  String getCategoryTitle(_i7.PlaceType? category) =>
      (super.noSuchMethod(
            Invocation.method(#getCategoryTitle, [category]),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getCategoryTitle, [category]),
            ),
          )
          as String);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [POIMapViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPOIMapViewModel extends _i1.Mock implements _i11.POIMapViewModel {
  MockPOIMapViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.POI> get matchingPOIs =>
      (super.noSuchMethod(
            Invocation.getter(#matchingPOIs),
            returnValue: <_i5.POI>[],
          )
          as List<_i5.POI>);

  @override
  List<_i5.POI> get poisOnCurrentFloor =>
      (super.noSuchMethod(
            Invocation.getter(#poisOnCurrentFloor),
            returnValue: <_i5.POI>[],
          )
          as List<_i5.POI>);

  @override
  String get selectedFloor =>
      (super.noSuchMethod(
            Invocation.getter(#selectedFloor),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#selectedFloor),
            ),
          )
          as String);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  String get errorMessage =>
      (super.noSuchMethod(
            Invocation.getter(#errorMessage),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#errorMessage),
            ),
          )
          as String);

  @override
  bool get floorPlanExists =>
      (super.noSuchMethod(
            Invocation.getter(#floorPlanExists),
            returnValue: false,
          )
          as bool);

  @override
  String get floorPlanPath =>
      (super.noSuchMethod(
            Invocation.getter(#floorPlanPath),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#floorPlanPath),
            ),
          )
          as String);

  @override
  double get width =>
      (super.noSuchMethod(Invocation.getter(#width), returnValue: 0.0)
          as double);

  @override
  double get height =>
      (super.noSuchMethod(Invocation.getter(#height), returnValue: 0.0)
          as double);

  @override
  bool get noPoisOnCurrentFloor =>
      (super.noSuchMethod(
            Invocation.getter(#noPoisOnCurrentFloor),
            returnValue: false,
          )
          as bool);

  @override
  double get searchRadius =>
      (super.noSuchMethod(Invocation.getter(#searchRadius), returnValue: 0.0)
          as double);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.Future<void> loadPOIData({
    String? initialBuilding,
    String? initialFloor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#loadPOIData, [], {
              #initialBuilding: initialBuilding,
              #initialFloor: initialFloor,
            }),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> findNearestBuildingWithPOI(
    double? userLat,
    double? userLng,
    String? initialFloor,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#findNearestBuildingWithPOI, [
              userLat,
              userLng,
              initialFloor,
            ]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> changeFloor(String? floor) =>
      (super.noSuchMethod(
            Invocation.method(#changeFloor, [floor]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> setSearchRadius(double? radius) =>
      (super.noSuchMethod(
            Invocation.method(#setSearchRadius, [radius]),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  _i8.Future<void> retry({String? initialBuilding, String? initialFloor}) =>
      (super.noSuchMethod(
            Invocation.method(#retry, [], {
              #initialBuilding: initialBuilding,
              #initialFloor: initialFloor,
            }),
            returnValue: _i8.Future<void>.value(),
            returnValueForMissingStub: _i8.Future<void>.value(),
          )
          as _i8.Future<void>);

  @override
  void panToPOI(_i5.POI? poi, _i10.Size? viewportSize) => super.noSuchMethod(
    Invocation.method(#panToPOI, [poi, viewportSize]),
    returnValueForMissingStub: null,
  );

  @override
  void panToFirstPOI(_i10.Size? viewportSize) => super.noSuchMethod(
    Invocation.method(#panToFirstPOI, [viewportSize]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}
