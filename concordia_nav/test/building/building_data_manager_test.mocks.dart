// Mocks generated by Mockito 5.4.5 from annotations
// in concordia_nav/test/building/building_data_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:concordia_nav/data/repositories/building_data.dart' as _i3;
import 'package:flutter/services.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AssetManifest].
///
/// See the documentation for Mockito's code generation for more information.
class MockAssetManifest extends _i1.Mock implements _i2.AssetManifest {
  MockAssetManifest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> listAssets() =>
      (super.noSuchMethod(
            Invocation.method(#listAssets, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  List<_i2.AssetMetadata>? getAssetVariants(String? key) =>
      (super.noSuchMethod(Invocation.method(#getAssetVariants, [key]))
          as List<_i2.AssetMetadata>?);
}

/// A class which mocks [BuildingDataLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockBuildingDataLoader extends _i1.Mock
    implements _i3.BuildingDataLoader {
  MockBuildingDataLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get buildingAbbreviation =>
      (super.noSuchMethod(
            Invocation.getter(#buildingAbbreviation),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.getter(#buildingAbbreviation),
            ),
          )
          as String);

  @override
  _i5.Future<_i3.BuildingData?> load() =>
      (super.noSuchMethod(
            Invocation.method(#load, []),
            returnValue: _i5.Future<_i3.BuildingData?>.value(),
          )
          as _i5.Future<_i3.BuildingData?>);
}
