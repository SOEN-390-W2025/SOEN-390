name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  actions: write

jobs:
  test:
    name: ðŸ§ª Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./concordia_nav
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create .env file
      uses: ./.github/actions/create-env
      with:
        google-maps-api-key: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - name: Setup Flutter
      uses: ./.github/actions/setup-flutter

    - name: Run linter
      run: rps lint check
    
    - name: Run unit tests
      run: rps test unit

    - name: Cancel workflow on failure
      if: failure()
      uses: vishnudxb/cancel-workflow@v1.2
      with:
        repo: ${{ github.repository }}
        workflow_id: ${{ github.run_id }}
        access_token: ${{ github.token }}

  build:
    name: ðŸ“¦ Build & ðŸ”¬ Integration Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./concordia_nav
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create .env file
      uses: ./.github/actions/create-env
      with:
        google-maps-api-key: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - name: Setup Flutter
      uses: ./.github/actions/setup-flutter

    - name: Setup Android Build
      uses: ./.github/actions/setup-android-build

    - name: Build (Release or Debug)
      uses: ./.github/actions/build-android
      with:
        release: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main') }}
        keystore-base64: ${{ secrets.KEYSTORE_BASE64 }}
        keystore-password: ${{ secrets.KEYSTORE_PASSWORD }}
        key-password: ${{ secrets.KEY_PASSWORD }}
        key-alias: ${{ secrets.KEY_ALIAS }}
    
    - name: Enable KVM Group Perms
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm

    - name: Install libpulse Dependency 
      run: |
        sudo apt-get update
        sudo apt-get install -y libpulse0

    - name: Install Maestro CLI
      run: |
        curl -Ls https://get.maestro.mobile.dev | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH
      
    - name: AVD Cache
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: ${{ runner.os }}-avd-35

    - name: Create AVD and Generate Snapshot for Caching
      if: steps.avd-cache.outputs.cache-hit != 'true'
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 35
        target: default
        arch: x86_64
        profile: pixel_7
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none
        disable-animations: false
        script: echo "Generated AVD snapshot for caching."

    # TODO: Change the first script from integration to record when the android emulation is fixed.
    - name: Set Integration Test Script Variable
      id: set-script
      run: |
        if [ "${{ github.ref }}" == "refs/heads/main" ] || ( [ "${{ github.event_name }}" == "pull_request" ] && [ "${{ github.base_ref }}" == "main" ] ); then
          echo "integration-test-script=bash -c \"set -o pipefail && rps install --release && rps test integration 2>&1 | grep -v -E '(UNSUPPORTED: curExtension->sType|VkDevice|VkInstance)'\"" >> $GITHUB_ENV
        else
          echo "integration-test-script=bash -c \"set -o pipefail && rps install --debug && rps test integration 2>&1 | grep -v -E '(UNSUPPORTED: curExtension->sType|VkDevice|VkInstance)'\"" >> $GITHUB_ENV
        fi

    - name: Run Integration Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 35
        target: default
        arch: x86_64
        profile: pixel_7
        force-avd-creation: false
        emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        working-directory: concordia_nav
        script: ${{ env.integration-test-script }}

    # - name: Upload Test Recording Artifacts
    #   uses: actions/upload-artifact@v4
    #   if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    #   with:
    #     name: integration-test-recordings
    #     path: concordia_nav/maestro/recordings/*.mp4
    #     retention-days: 90

  coverage:
    name: ðŸ“Š Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./concordia_nav
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create .env file
      uses: ./.github/actions/create-env
      with:
        google-maps-api-key: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - name: Setup Flutter
      uses: ./.github/actions/setup-flutter

    - name: Generate Code Coverage Report
      run: rps coverage

    - name: Upload Coverage Report to Codecov
      uses: codecov/codecov-action@v5
      with:
        directory: ./concordia_nav/coverage
        fail_ci_if_error: false
        files: ./lcov.info,
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: NathanGrenier/SOEN-390
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}