name: concordia_nav
description: "Mobile application for Concordia University students to navigate around campus."
publish_to: "none"

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.6.1

scripts:
  gen: flutter pub run build_runner build --delete-conflicting-outputs # Generates the scripts
  get: flutter pub get
  format:
    fix: dart format .
    check: dart format --output=none --set-exit-if-changed .
  test:
    unit: rps gen && flutter test -r expanded
    integration:
      $script: maestro test --format html --output ../pages/integration-test-report.html maestro/*.yaml
      $description: Generates a report of the integration test results in HTML format. Does not record the tests.
    all: rps test unit && rps test integration
    record:
      $script: bash ./maestro/record.sh
      $description: Records the integrations tests. Does not generate a html report of the tests. You can pass in a regex parameter to specify what files you want run. Example; rps test record "^1_1" (This will select all files who's names start with "1_1"). Default regex is to select all files.
  lint:
    check: flutter analyze
    fix: dart fix --apply
  dart-lint: dart fix --dry-run
  coverage: flutter test --coverage --branch-coverage && dart run test_cov_console --line -f ./coverage/lcov.info
  codecov:
    windows: powershell -Command "$token = (Get-Content ../.env | Where-Object { $_ -like 'CODECOV_TOKEN=*' } | ForEach-Object { $_.Split('=')[1].Trim() }); if ($token) { codecov upload-process -t $token } else { Write-Error 'CODECOV_TOKEN not found in .env file' }"
    mac: token=$(grep 'CODECOV_TOKEN' ../.env | cut -d '=' -f2 | tr -d '[:space:]') && codecov upload-process -t $token
  run: flutter run --dart-define-from-file=./.env
  clean: flutter clean
  build:
    android:
      $script: flutter build apk --dart-define-from-file=./.env
      $description: Build the android app. Can pass --debug or --release flag. (Default --release)
    ios: flutter build ipa
  install:
    $script: flutter install
    $description: Install the app on the connected device. Can pass --release or --debug flags. (Default --release)
  ci:
    $script: rps clean && rps format check && rps lint check && rps test unit && rps build android --debug && rps coverage
    $description: Run all of the commands that are part of the ci pipeline

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  english_words: ^4.0.0
  provider: ^6.1.2
  cupertino_icons: ^1.0.8
  http: ^1.3.0
  device_calendar: ^4.3.3
  google_maps_flutter: ^2.10.0
  flutter_env_native: ^0.1.0
  geolocator: ^13.0.2
  google_directions_api: ^0.10.0
  flutter_polyline_points: ^2.1.0
  flutter_dotenv: ^5.2.1
  url_launcher: ^6.3.1
  geocoding: ^3.0.0
  yaml: ^3.1.3

dev_dependencies:
  flutter_test:
    sdk: flutter
  integration_test:
    sdk: flutter
  flutter_lints: ^5.0.0 # Lint rules are found in `analysis_options.yaml`
  test: ^1.25.8
  mockito: ^5.4.5
  build_runner: ^2.4.14
  mockingjay: ^0.6.0
  test_cov_console: ^0.2.2

plugin:
  platforms:
    android:
      package: com.example.concordia_nav
      pluginClass: ConcordiaNavPlugin
    ios:
      pluginClass: ConcordiaNavPlugin

# The following section is specific to Flutter packages.
flutter:
  uses-material-design: true

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package
  # Note: any other .env files, ex. a file named .env.prod, should be declared
  # under assets as well.
  assets:
    - .env
    - assets/config/
    - assets/icons/
    - assets/images/
    - assets/maps/outdoor/all/polygons.json
    - assets/maps/outdoor/sgw/polygons.json
    - assets/maps/outdoor/loy/polygons.json
    - assets/maps/outdoor/shuttle_bus_routes/loy_to_sgw.json
    - assets/maps/outdoor/shuttle_bus_routes/sgw_to_loy.json
    - assets/maps/outdoor/shuttle_bus_schedules/monday_thursday.json
    - assets/maps/outdoor/shuttle_bus_schedules/friday.json
    - assets/maps/indoor/Hall-1.png
    - assets/icons/default.png
    - assets/icons/destination.png
    - assets/icons/origin.png
    - assets/icons/shuttle_bus.png
    - assets/icons/shuttle_bus_station.png
    - assets/icons/AD.png
    - assets/icons/CC.png
    - assets/icons/CJ.png
    - assets/icons/CL.png
    - assets/icons/EV.png
    - assets/icons/ER.png
    - assets/icons/FB.png
    - assets/icons/FC.png
    - assets/icons/FG.png
    - assets/icons/GE.png
    - assets/icons/GM.png
    - assets/icons/HA.png
    - assets/icons/H.png
    - assets/icons/HU.png
    - assets/icons/LB.png
    - assets/icons/LS.png
    - assets/icons/MB.png
    - assets/icons/PC.png
    - assets/icons/PS.png
    - assets/icons/PT.png
    - assets/icons/PY.png
    - assets/icons/RA.png
    - assets/icons/RF.png
    - assets/icons/SC.png
    - assets/icons/SP.png
    - assets/icons/TD.png
    - assets/icons/VA.png
    - assets/icons/VE.png
    - assets/icons/VL.png
    - assets/maps/outdoor/all/
    - assets/maps/outdoor/loy/
    - assets/maps/outdoor/sgw/
    - assets/maps/outdoor/shuttle_bus_routes/
    - assets/maps/outdoor/shuttle_bus_schedules/
    - assets/maps/indoor/data/CC.yaml
    - assets/maps/indoor/data/H.yaml
    - assets/maps/indoor/data/VL.yaml
    - assets/maps/indoor/data/MB.yaml
    - assets/maps/indoor/floorplans/

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
