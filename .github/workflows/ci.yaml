name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    name: ðŸ§ª Run Tests
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./concordia_nav
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create .env file
      uses: ./.github/actions/create-env
      with:
        google-maps-api-key: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - name: Setup Flutter
      uses: ./.github/actions/setup-flutter

    - name: Run linter
      run: rps lint check
    
    - name: Run unit tests
      run: rps test unit
    
    # - name: Enable KVM group perms
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     if [ -e /dev/kvm ]; then
    #       sudo sh -c 'echo "KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"" > /etc/udev/rules.d/99-kvm4all.rules'
    #       sudo udevadm control --reload-rules
    #       sudo udevadm trigger --name-match=kvm
    #     else
    #       echo "Skipping KVM setup as /dev/kvm is not available."
    #     fi

    # - name: Run Integration Tests
    #   uses: reactivecircus/android-emulator-runner@v2
    #   with:
    #     api-level: 35
    #     script: rps test integration

  build:
    name: ðŸ“¦ Build
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./concordia_nav
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create .env file
      uses: ./.github/actions/create-env
      with:
        google-maps-api-key: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - name: Setup Flutter
      uses: ./.github/actions/setup-flutter

    - name: Setup Android Build
      uses: ./.github/actions/setup-android-build

    - name: Build (Release or Debug)
      uses: ./.github/actions/build-android
      with:
        release: ${{ github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main') }}
        keystore-base64: ${{ secrets.KEYSTORE_BASE64 }}
        keystore-password: ${{ secrets.KEYSTORE_PASSWORD }}
        key-password: ${{ secrets.KEY_PASSWORD }}
        key-alias: ${{ secrets.KEY_ALIAS }}

  coverage:
    name: ðŸ“Š Coverage
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./concordia_nav
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create .env file
      uses: ./.github/actions/create-env
      with:
        google-maps-api-key: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    - name: Setup Flutter
      uses: ./.github/actions/setup-flutter

    - name: Generate Code Coverage Report
      run: rps coverage

    - name: Upload Coverage Report to Codecov
      uses: codecov/codecov-action@v5
      with:
        directory: ./concordia_nav/coverage
        fail_ci_if_error: false
        files: ./lcov.info,
        verbose: true
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: NathanGrenier/SOEN-390
    
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
